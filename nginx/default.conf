http {
  access_log /var/log/nginx/access.log combined;

  server {
    # if no Host match, close the connection to prevent host spoofing
    listen 80 default_server;
    listen [::]:80 default_server;
    listen 443 default_server ssl;
    listen [::]:443 default_server ssl;

    server_tokens off;
    ssl_certificate /certs/cert.pem;
    ssl_certificate_key /certs/key.pem;
    ssl_protocols TLSv1.3;

    return 444;
  }

  server {
    listen 80;
    listen [::]:80;

    server_name ${NGINX_HOSTNAME};
    server_tokens off;

    location / {
        return 301 https://$host$request_uri;
    }
  }

  server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name ${NGINX_HOSTNAME};

    server_tokens off;
    ssl_certificate /certs/cert.pem;
    ssl_certificate_key /certs/key.pem;
    ssl_protocols TLSv1.3;

    location / {
        proxy_pass http://semantic-app:8000;
        proxy_redirect off;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Prefix /;

    }
  }
}
